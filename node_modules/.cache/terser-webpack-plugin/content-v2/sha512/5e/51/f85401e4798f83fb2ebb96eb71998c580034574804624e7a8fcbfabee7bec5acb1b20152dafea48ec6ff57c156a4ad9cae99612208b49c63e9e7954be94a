{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{201:function(e,v,s){e.exports=s.p+\"assets/img/hbase.93edf177.png\"},202:function(e,v,s){e.exports=s.p+\"assets/img/hbase_sql.959a0d0b.png\"},203:function(e,v,s){e.exports=s.p+\"assets/img/hbase_table.1b989bf7.png\"},204:function(e,v,s){e.exports=s.p+\"assets/img/hbase_jz.3ac5b219.png\"},205:function(e,v,s){e.exports=s.p+\"assets/img/hbase_regin.3283b72d.png\"},206:function(e,v,s){e.exports=s.p+\"assets/img/hbase_zk.1a45a579.png\"},242:function(e,v,s){\"use strict\";s.r(v);var r=s(28),_=Object(r.a)({},(function(){var e=this,v=e.$createElement,r=e._self._c||v;return r(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[r(\"h1\",{attrs:{id:\"一、hbase\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#一、hbase\"}},[e._v(\"#\")]),e._v(\" 一、HBase\")]),e._v(\" \"),r(\"p\",[e._v(\"官网：http://hbase.apache.org\")]),e._v(\" \"),r(\"p\",[r(\"img\",{attrs:{src:s(201),alt:\"\"}})]),e._v(\" \"),r(\"p\",[e._v(\"HDFS：Hadoop分布式文件系统，适合非结构化数据的存储以及读取。\")]),e._v(\" \"),r(\"p\",[e._v(\"Apache HBase建立在HDFS之上的分布式、基于列存储的非关系型数据库；具有可靠、稳定、自动容错、多版本特性。\")]),e._v(\" \"),r(\"p\",[e._v(\"HBase实际上是Google BigTable项目的开源实现，它适合于海量的大规模（数十亿行、数百万列）的结构化数据存储。\")]),e._v(\" \"),r(\"p\",[e._v(\"当需要随机、实时读写访问大数据时,使用HBase。\")]),e._v(\" \"),r(\"h2\",{attrs:{id:\"_1-概念特性\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-概念特性\"}},[e._v(\"#\")]),e._v(\" 1. 概念特性\")]),e._v(\" \"),r(\"p\",[e._v(\"HBASE是一个\"),r(\"strong\",[e._v(\"数据库\")]),e._v(\"----可以提供数据的实时\"),r(\"strong\",[e._v(\"随机读写\")])]),e._v(\" \"),r(\"p\",[e._v(\"HBASE与mysql、oralce、db2、sqlserver等关系型数据库不同，它是一个NoSQL数据库（非关系型数据库）\")]),e._v(\" \"),r(\"ul\",[r(\"li\",[r(\"p\",[e._v(\"Hbase的表模型与关系型数据库的表模型不同：\")])]),e._v(\" \"),r(\"li\",[r(\"p\",[e._v(\"Hbase的表没有固定的字段定义；\")])]),e._v(\" \"),r(\"li\",[r(\"p\",[e._v(\"Hbase的表中每行存储的都是一些key-value对\")])]),e._v(\" \"),r(\"li\",[r(\"p\",[e._v(\"Hbase的表中有列族的划分，用户可以指定将哪些kv插入哪个列族\")])]),e._v(\" \"),r(\"li\",[r(\"p\",[e._v(\"Hbase的表在物理存储上，是按照列族来分割的，不同列族的数据一定存储在不同的文件中\")])]),e._v(\" \"),r(\"li\",[r(\"p\",[e._v(\"Hbase的表中的每一行都固定有一个行键，而且每一行的行键在表中不能重复\")])]),e._v(\" \"),r(\"li\",[r(\"p\",[e._v(\"Hbase中的数据，包含行键，包含key，包含value，HBase中的数据都是字符串（底层存储采用的是byte[]），没有类型，hbase不负责为用户维护数据类型\")])]),e._v(\" \"),r(\"li\",[r(\"p\",[e._v(\"HBASE对事务的支持很差\")])])]),e._v(\" \"),r(\"p\",[e._v(\"HBASE相比于其他nosql数据库(mongodb、redis、cassendra、hazelcast)的特点：\")]),e._v(\" \"),r(\"p\",[r(\"strong\",[e._v(\"Hbase的表数据存储在HDFS文件系统中\")])]),e._v(\" \"),r(\"p\",[e._v(\"从而，hbase具备如下特性：存储容量可以线性扩展； 数据存储的安全性可靠性极高！\")]),e._v(\" \"),r(\"h2\",{attrs:{id:\"_2-各种数据库之间的差别比较\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-各种数据库之间的差别比较\"}},[e._v(\"#\")]),e._v(\" 2. 各种数据库之间的差别比较\")]),e._v(\" \"),r(\"p\",[r(\"img\",{attrs:{src:s(202),alt:\"\"}})]),e._v(\" \"),r(\"h3\",{attrs:{id:\"_2-1-hbase和hive区别\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-1-hbase和hive区别\"}},[e._v(\"#\")]),e._v(\" 2.1 HBase和Hive区别\")]),e._v(\" \"),r(\"h4\",{attrs:{id:\"_2-1-1-hive-数据仓库的理解\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-1-1-hive-数据仓库的理解\"}},[e._v(\"#\")]),e._v(\" 2.1.1 Hive 数据仓库的理解\")]),e._v(\" \"),r(\"ol\",[r(\"li\",[r(\"p\",[e._v(\"仓库就是存放历史数据存的地方，反复对历史数据进行读操作，统计分析操作，历史数据不需要修改。\")])]),e._v(\" \"),r(\"li\",[r(\"p\",[e._v(\"Hive严格意义上来讲不能算是数据库。\")]),e._v(\" \"),r(\"p\",[e._v(\"Hive与Hbase巨大的区别在于，Hive底层依赖的文件系统HDFS中的数据是用户提交的，没有固定的格式，可以理解成按照分隔符分割的简单文本，而不是精心设计的文件（如Mysql那样精心设计的文件加上mysql中共的软件系统，可以对数据进行随机的访问和修改操作），Hive只能对这些数据进行读取，分析，不能对修改和跟新数据。\")])]),e._v(\" \"),r(\"li\",[r(\"p\",[e._v(\"mysql也当然具备做为数据仓库的功能和能力，但是数据量太大是，mysql不适合，mysql适于联机事务处理（在线实时交互）。\")])])]),e._v(\" \"),r(\"h4\",{attrs:{id:\"_2-1-2-hbase\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-1-2-hbase\"}},[e._v(\"#\")]),e._v(\" 2.1.2 HBase\")]),e._v(\" \"),r(\"ol\",[r(\"li\",[r(\"p\",[e._v(\"同msyql一样，底层的文件系统的精心设计的，Hbase的底层文件系统也是HDFS。\")])]),e._v(\" \"),r(\"li\",[r(\"p\",[e._v(\"具有联机事务处理数据库的特性（\"),r(\"strong\",[e._v(\"快速\")]),e._v(\" \"),r(\"strong\",[e._v(\"实时\")]),e._v(\"操作数据库，增删改查）。\")])]),e._v(\" \"),r(\"li\",[r(\"p\",[e._v(\"Hbase本身的特性：\")]),e._v(\" \"),r(\"ul\",[r(\"li\",[e._v(\"文件系统：HDFS（表可以很大很大）\")]),e._v(\" \"),r(\"li\",[e._v(\"分布式系统\")]),e._v(\" \"),r(\"li\",[e._v(\"nosql表结构\")])])])]),e._v(\" \"),r(\"h2\",{attrs:{id:\"_3-hbase-特性与表结构\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-hbase-特性与表结构\"}},[e._v(\"#\")]),e._v(\" 3. HBase 特性与表结构\")]),e._v(\" \"),r(\"p\",[r(\"img\",{attrs:{src:s(203),alt:\"Hbase的逻辑结构\"}})]),e._v(\" \"),r(\"p\",[r(\"strong\",[e._v(\"列族\")]),e._v(\"：KV分为若干的大类：，如上表所示。\")]),e._v(\" \"),r(\"ol\",[r(\"li\",[e._v(\"每个列族中的kv数据可以随意存放，key可以不同，没有严格要求，完全有用户决定，当然一般使用情况下，数据是规整的；\")])]),e._v(\" \"),r(\"p\",[e._v(\"如：下表是可以的，但是为了数据的规整，一般不建议随意为key起名字，最好保持一致。\")]),e._v(\" \"),r(\"table\",[r(\"thead\",[r(\"tr\",[r(\"th\",[e._v(\"rowkey\")]),e._v(\" \"),r(\"th\",[e._v(\"base_info\")])])]),e._v(\" \"),r(\"tbody\",[r(\"tr\",[r(\"td\",[e._v(\"001\")]),e._v(\" \"),r(\"td\",[e._v(\"name:jj, age:12, sex:mal\")])]),e._v(\" \"),r(\"tr\",[r(\"td\",[e._v(\"002\")]),e._v(\" \"),r(\"td\",[e._v(\"nick:ls, age:15, xb:male\")])])])]),e._v(\" \"),r(\"ol\",{attrs:{start:\"2\"}},[r(\"li\",[r(\"p\",[e._v(\"同一个列祖中的kv的个数也是灵活的，可以省略某些kv\")]),e._v(\" \"),r(\"p\",[e._v(\"**cell：**同一个数据可以保存多个值\")]),e._v(\" \"),r(\"ul\",[r(\"li\",[r(\"p\",[e._v(\"一个kv就是一个cell\")])]),e._v(\" \"),r(\"li\",[r(\"p\",[e._v(\"一个key可有有多个版本的值\")])]),e._v(\" \"),r(\"li\",[r(\"p\",[e._v(\"时间戳作为版本\")])])])])]),e._v(\" \"),r(\"h2\",{attrs:{id:\"_4-hbase-整体工作机制\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-hbase-整体工作机制\"}},[e._v(\"#\")]),e._v(\" 4. HBase 整体工作机制\")]),e._v(\" \"),r(\"h3\",{attrs:{id:\"_4-1-工作机制示意图\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-1-工作机制示意图\"}},[e._v(\"#\")]),e._v(\" 4.1 工作机制示意图\")]),e._v(\" \"),r(\"p\",[r(\"img\",{attrs:{src:s(204),alt:\"\"}})]),e._v(\" \"),r(\"p\",[e._v(\"Hbase集群中有两个角色\")]),e._v(\" \"),r(\"p\",[r(\"strong\",[e._v(\"region server\")])]),e._v(\" \"),r(\"p\",[r(\"strong\",[e._v(\"master\")])]),e._v(\" \"),r(\"p\",[e._v(\"region server负责数据的逻辑处理（增删改查），\"),r(\"strong\",[e._v(\"region server对数据的操作是不经过master\")]),e._v(\"。某一个瞬间master挂了，regionserver还是可以正常服务的，但是一定时间之后，万一某一个regionserver挂了，该regionserver负责的任务得不到重新分配，就会出问题。\")]),e._v(\" \"),r(\"h3\",{attrs:{id:\"_4-2-存储问题（分散存储）\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-2-存储问题（分散存储）\"}},[e._v(\"#\")]),e._v(\" 4.2 存储问题（分散存储）\")]),e._v(\" \"),r(\"p\",[e._v(\"按照region划分范围存储（region目录还细分为列族目录，列族目录下才存放具体的文件）\")]),e._v(\" \"),r(\"h3\",{attrs:{id:\"_4-3-查询问题（分布式：分任务查询）\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-3-查询问题（分布式：分任务查询）\"}},[e._v(\"#\")]),e._v(\" 4.3 查询问题（分布式：分任务查询）\")]),e._v(\" \"),r(\"p\",[e._v(\"HBase底层文件系统是HDFS，HBase中的表最终也会落地HDFS，那么Hbase的一张表可以很大很大，表中的数据不断的增加增加存储也是可以的，但是怎么查询呢？\")]),e._v(\" \"),r(\"p\",[e._v(\"当请求特别多的时候，一台HBase服务器（region server）是不行的，HBase是一个分布式的系统，当有多个Hbase提供服务的时候，某一次客户端的请求具体由那个服务器来处理呢？\")]),e._v(\" \"),r(\"ul\",[r(\"li\",[r(\"p\",[e._v(\"当某一台服务器挂了，谁来接替它的工作，如何接替？\")]),e._v(\" \"),r(\"p\",[e._v(\"​\\t**解决：**服务器需要分任务（分布式系统里肯定是要分任务的）\")]),e._v(\" \"),r(\"p\",[e._v(\"​\\t一台服务器，负责Hbase中某个表的某一个部分。\")])]),e._v(\" \"),r(\"li\",[r(\"p\",[e._v(\"如何界定部分？\")]),e._v(\" \"),r(\"p\",[e._v(\"​\\t需要\"),r(\"strong\",[e._v(\"划分范围：\"),r(\"strong\",[e._v(\"按照\")]),e._v(\"行健范围\")])])])]),e._v(\" \"),r(\"p\",[e._v(\"这样通过分任务之后就是一个\"),r(\"strong\",[e._v(\"分布式系统。\"),r(\"strong\",[e._v(\"不同的regionServer可以\")]),e._v(\"并行\")]),e._v(\"的去访问hdfs中的数据（表数据）\"),r(\"strong\",[e._v(\"，\"),r(\"strong\",[e._v(\"这样还有一个问题，若某一张表中的所有数据都存在同一个HDFS中的文件中，即使是负责同一张表的不同范围regionserver，大量的并行请求也会同时访问同一个hdfs文件，这会造成性能上的瓶颈，所以表中的数据在HDFS中是按照\")]),e._v(\"region划分范围存储（region目录还细分为列族目录，列族目录下才存放具体的文件）\")]),e._v(\", 这样\"),r(\"strong\",[e._v(\"同一个表的不同region范围的数据落地HDFS中不同的文件中\")]),e._v(\"。否则会造成即是分了任务一个dataNode被频繁的访问。\")]),e._v(\" \"),r(\"h3\",{attrs:{id:\"_4-5-hbase工作机制补充—regionserver数据管理\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-5-hbase工作机制补充—regionserver数据管理\"}},[e._v(\"#\")]),e._v(\" 4.5 Hbase工作机制补充—regionserver数据管理\")]),e._v(\" \"),r(\"p\",[e._v(\"首先在hbase的表中插入一些数据，然后来观察一下hdfs中存的数据，发现hdfs下并没有数据，但是scan明明可以查到数据的，这是怎么回事呢？\")]),e._v(\" \"),r(\"p\",[r(\"img\",{attrs:{src:\"https://img2018.cnblogs.com/blog/1020536/201810/1020536-20181016094210414-521552116.png\",alt:\"img\"}})]),e._v(\" \"),r(\"h4\",{attrs:{id:\"_4-2-1-客户端读写数据时的路由流程\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-2-1-客户端读写数据时的路由流程\"}},[e._v(\"#\")]),e._v(\" 4.2.1 客户端读写数据时的路由流程\")]),e._v(\" \"),r(\"p\",[r(\"strong\",[e._v(\"问题描述\")]),e._v(\"：客户端怎么知道他要访问的某个region在那一台regionserver上呢？\")]),e._v(\" \"),r(\"p\",[e._v(\"master是不会保存哪些region在哪些regionserver上的，否则就是有状态的节点了，一旦master挂了，regionserver立刻无法提供服务，而事实不是这样。\")]),e._v(\" \"),r(\"p\",[e._v(\"上述信息就是所谓的索引信息，master是不会保存索引信息的，索引信息是保存在系统索引表中的。\")]),e._v(\" \"),r(\"ol\",[r(\"li\",[r(\"p\",[e._v(\"索引表当然也存在于hdfs中，且只有一个region；\")])]),e._v(\" \"),r(\"li\",[r(\"p\",[e._v(\"谁来负责查询索引表\")])])]),e._v(\" \"),r(\"p\",[e._v(\"下图所示，索引表数据的查询由hdp-02机器上的regionserver负责，那么客户端怎样知道meta数据由hdp-02负责\")]),e._v(\" \"),r(\"p\",[r(\"img\",{attrs:{src:s(205),alt:\"\"}})]),e._v(\" \"),r(\"p\",[r(\"strong\",[e._v(\"zookeeper上会记录元数据索引表，有哪一台regionserver负责管理。\")]),e._v(\"　客户单端，每次访问数据之前，先查询zookeeper。\")]),e._v(\" \"),r(\"p\",[r(\"img\",{attrs:{src:s(206),alt:\"\"}})]),e._v(\" \"),r(\"p\",[e._v(\"下图为Zookeeper节点\"),r(\"strong\",[e._v(\"meta-region-server的信息\")])]),e._v(\" \"),r(\"p\",[r(\"strong\",[e._v(\"访问流程：\")])]),e._v(\" \"),r(\"ol\",[r(\"li\",[r(\"p\",[e._v(\"客户端去Zookeeper上查询，负责索引表数据的regionserver；\")])]),e._v(\" \"),r(\"li\",[r(\"p\",[e._v(\"找该台regionserver服务器，查询出客户端要访问的region数据由哪一台regionserver负责；\")])]),e._v(\" \"),r(\"li\",[r(\"p\",[e._v(\"客户端找具体的regionserver要数据.\")])])]),e._v(\" \"),r(\"p\",[r(\"strong\",[e._v(\"总结：\")])]),e._v(\" \"),r(\"ol\",[r(\"li\",[r(\"p\",[e._v(\"Hbase表中的数据是存放在hdfs中的。\")])]),e._v(\" \"),r(\"li\",[r(\"p\",[e._v(\"regionserver只负责逻辑功能，对数据进行增删改查，不存储它负责的region的数据。\")])]),e._v(\" \"),r(\"li\",[r(\"p\",[e._v(\"一个regionserver可以负责多个表的多个region。\")])]),e._v(\" \"),r(\"li\",[r(\"p\",[e._v(\"region是regionServer管理数据的基本单元。\")])]),e._v(\" \"),r(\"li\",[r(\"p\",[e._v(\"客户端查找数据不经过master。\")])]),e._v(\" \"),r(\"li\",[r(\"p\",[e._v(\"客观端查找数据一定经过Zookeeper。\")])])]),e._v(\" \"),r(\"h3\",{attrs:{id:\"_4-4-服务器宕机问题（借助zookeeper实现ha）\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-4-服务器宕机问题（借助zookeeper实现ha）\"}},[e._v(\"#\")]),e._v(\" 4.4 服务器宕机问题（借助Zookeeper实现HA）\")]),e._v(\" \"),r(\"p\",[r(\"strong\",[e._v(\"master对regionserver的监管，状态协调\")])]),e._v(\" \"),r(\"ol\",[r(\"li\",[r(\"p\",[e._v(\"所有的状态信息记录在Zookeeper里。\")])]),e._v(\" \"),r(\"li\",[r(\"p\",[e._v(\"master\"),r(\"strong\",[e._v(\"负责监管\")]),e._v(\"region server的状态，知道每一个regionserver负责哪些表的哪些region，不负责帮用户查数据，一旦发现某个region server发生故障，会找另外的一台机器来接替该region server负责的region区域。\")])]),e._v(\" \"),r(\"li\",[r(\"p\",[e._v(\"master通过Zookeeper来获取regionserver的状态。\")])]),e._v(\" \"),r(\"li\",[r(\"p\",[e._v(\"master通过Zookeeper监听region server，maste是没有状态的节点，master存在单点故障的风险；通过主备容灾实现HA机制。\")])])]),e._v(\" \"),r(\"p\",[r(\"strong\",[e._v(\"master HA\")])]),e._v(\" \"),r(\"p\",[r(\"strong\",[e._v(\"状态信息记录在Zookeeper里。\")])]),e._v(\" \"),r(\"p\",[e._v(\"可以在集群中找任意一台机器启动一个备用的master，新启的这个master会处于backup状态\")]),e._v(\" \"),r(\"h2\",{attrs:{id:\"_5-安装-hbase\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-安装-hbase\"}},[e._v(\"#\")]),e._v(\" 5. 安装 HBase\")]),e._v(\" \"),r(\"h3\",{attrs:{id:\"安装hbase\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#安装hbase\"}},[e._v(\"#\")]),e._v(\" 安装HBase\")]),e._v(\" \"),r(\"p\",[e._v(\"HBase是Google Bigtable的开源实现，它利用Hadoop HDFS作为其文件存储系统，利用Hadoop MapReduce来处理HBase中的海量数据，利用Zookeeper作为协同服务。所以安装HBase之前还需要安装zookeeper和hdfs。\")]),e._v(\" \"),r(\"p\",[e._v(\"如果是Apache hadoop就下载相应文件并修改配置文件安装。我用的是cloudera hadoop就直接在集群管理界面添加服务。\")]),e._v(\" \"),r(\"p\",[r(\"img\",{attrs:{src:\"https:////upload-images.jianshu.io/upload_images/10086112-82374970c9ed6826.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1122/format/webp\",alt:\"img\"}})])])}),[],!1,null,null,null);v.default=_.exports}}]);","extractedComments":[]}