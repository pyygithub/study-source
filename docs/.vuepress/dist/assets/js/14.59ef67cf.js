(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{423:function(a,s,t){a.exports=t.p+"assets/img/1602684437927.cb98fae9.png"},424:function(a,s,t){a.exports=t.p+"assets/img/1602685032095.9f95da9b.png"},425:function(a,s,t){a.exports=t.p+"assets/img/1602685184080.47b7e2b0.png"},426:function(a,s,t){a.exports=t.p+"assets/img/1602685787868.5432c624.png"},427:function(a,s,t){a.exports=t.p+"assets/img/image-20201015092156290.60361420.png"},510:function(a,s,t){"use strict";t.r(s);var e=t(19),r=Object(e.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"elk大规模日志实时处理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#elk大规模日志实时处理"}},[a._v("#")]),a._v(" ELK大规模日志实时处理")]),a._v(" "),e("h2",{attrs:{id:"一、elk架构介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、elk架构介绍"}},[a._v("#")]),a._v(" 一、ELK架构介绍")]),a._v(" "),e("h3",{attrs:{id:"_1-1-核心组成"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-核心组成"}},[a._v("#")]),a._v(" 1.1 核心组成")]),a._v(" "),e("p",[a._v("ELK是一个应用套件，由Elasticsearch、Logstash和Kibana三部分组件组成，简称ELK；它是一套开源免费、功能强大的日志分析管理系统。ELK可以将我们的系统日志、网站日志、应用系统日志等各种日志进行收集、过滤、清洗，然后进行集中存放并可用于实时检索、分析。")]),a._v(" "),e("p",[a._v("这三款软件都是开源软件，通常是配合使用，而且又先后归于Elastic.co公司名下，故又被简称为ELK Stack。下图是ELK Stack的基础组成。")]),a._v(" "),e("p",[e("img",{attrs:{src:t(423),alt:""}})]),a._v(" "),e("h3",{attrs:{id:"_1-2-elasticsearch介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-elasticsearch介绍"}},[a._v("#")]),a._v(" 1.2 Elasticsearch介绍")]),a._v(" "),e("p",[a._v("Elasticsearch是一个实时的分布式搜索和分析引擎，它可以用于全文搜索，结构化搜索以及分析，采用Java语言编写。它的主要特点如下：")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("实时搜索，实时分析")])]),a._v(" "),e("li",[e("p",[a._v("分布式架构、实时文件存储，并将每一个字段都编入索引")])]),a._v(" "),e("li",[e("p",[a._v("文档导向，所有的对象全部是文档")])]),a._v(" "),e("li",[e("p",[a._v("高可用性，易扩展，支持集群（Cluster）、分片和复制（Shards和Replicas）")])]),a._v(" "),e("li",[e("p",[a._v("接口友好，支持JSON")])])]),a._v(" "),e("p",[a._v("Elasticsearch支持集群架构，典型的集群架构如下图所示：")]),a._v(" "),e("p",[e("img",{attrs:{src:t(424),alt:"1602685032095"}})]),a._v(" "),e("p",[a._v("从图中可以看出，Elasticsearch集群中有Master Node和Slave Node两种角色，其实还有一种角色Client Node，这在后面会做深入介绍。")]),a._v(" "),e("h3",{attrs:{id:"_1-3-logstash-介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-logstash-介绍"}},[a._v("#")]),a._v(" 1.3 Logstash 介绍")]),a._v(" "),e("p",[a._v("Logstash是一款轻量级的、开源的日志收集处理框架，它可以方便的把分散的、多样化的日志搜集起来，并进行自定义过滤分析处理，然后传输到指定的位置，比如某个服务器或者文件。Logstash采用JRuby语言编写，它的主要特点如下：\nLogstash的理念很简单，从功能上来讲，它只做三件事情：")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("input：数据收集")])]),a._v(" "),e("li",[e("p",[a._v("filter：数据加工，如过滤，改写等")])]),a._v(" "),e("li",[e("p",[a._v("output：数据输出")])])]),a._v(" "),e("p",[a._v("别看它只做三件事，但通过组合输入和输出，可以变幻出多种架构实现多种需求。Logstash内部运行逻辑如下图所示：")]),a._v(" "),e("p",[e("img",{attrs:{src:t(425),alt:"1602685184080"}})]),a._v(" "),e("p",[a._v("其中，每个部分含义如下：")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("Shipper：主要用来收集日志数据，负责监控本地日志文件的变化，及时把日志文件的最新内容收集起来，然后经过加工、过滤，输出到Broker。")])]),a._v(" "),e("li",[e("p",[a._v("Broker：相当于日志Hub，用来连接多个Shipper和多个Indexer。")])]),a._v(" "),e("li",[e("p",[a._v("Indexer：从Broker读取文本，经过加工、过滤，输出到指定的介质（可以是文件、网络、elasticsearch等）中。")])])]),a._v(" "),e("p",[a._v("Redis服务器是logstash官方推荐的broker，这个broker起数据缓存的作用，通过这个缓存器可以提高Logstash shipper发送日志到Logstash indexer的速度，同时避免由于突然断电等导致的数据丢失。可以实现broker功能的还有很多软件，例如kafka等。")]),a._v(" "),e("p",[a._v("这里需要说明的是，在实际应用中，LogStash自身并没有什么角色，只是根据不同的功能、不同的配置给出不同的称呼而已，无论是Shipper还是Indexer，始终只做前面提到的三件事。")]),a._v(" "),e("p",[a._v("这里需要重点掌握的是logstash中Shipper和Indexer的作用，因为这两个部分是logstash功能的核心，在下面的介绍中，会陆续介绍到这两个部分实现的功能细节。")]),a._v(" "),e("h3",{attrs:{id:"_1-4-kibana-介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-kibana-介绍"}},[a._v("#")]),a._v(" 1.4 Kibana 介绍")]),a._v(" "),e("p",[a._v("Kibana是一个开源的数据分析可视化平台。使用Kibana可以为Logstash和ElasticSearch提供的日志数据进行高效的搜索、可视化汇总和多维度分析，还可以与Elasticsearch搜索引擎之中的数据进行交互。它基于浏览器的界面操作可以快速创建动态仪表板，实时监控ElasticSearch的数据状态与更改。")]),a._v(" "),e("h4",{attrs:{id:"elk工作流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#elk工作流程"}},[a._v("#")]),a._v(" ELK工作流程")]),a._v(" "),e("p",[a._v("一般都是在需要收集日志的所有服务上部署logstash，作为logstash shipper用于监控并收集、过滤日志，接着，将过滤后的日志发送给Broker，然后，Logstash Indexer将存放在Broker中的数据再写入Elasticsearch，Elasticsearch对这些数据创建索引，最后由Kibana对其进行各种分析并以图表的形式展示。")]),a._v(" "),e("p",[e("img",{attrs:{src:t(426),alt:"1602685787868"}})]),a._v(" "),e("p",[a._v("有些时候，如果收集的日志量较大，为了保证日志收集的性能和数据的完整性，logstash shipper和logstash indexer之间的缓冲器（Broker）也经常采用kafka来实现。")]),a._v(" "),e("p",[a._v("在这个图中，要重点掌握的是ELK架构的数据流向，以及logstash、Elasticsearch和Kibana组合实现的功能细节。")]),a._v(" "),e("h2",{attrs:{id:"二-zookeeper基础与入门"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二-zookeeper基础与入门"}},[a._v("#")]),a._v(" 二 ZooKeeper基础与入门")]),a._v(" "),e("h3",{attrs:{id:"_2-1-zookeeper概念介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-zookeeper概念介绍"}},[a._v("#")]),a._v(" 2.1 ZooKeeper概念介绍")]),a._v(" "),e("p",[a._v("在介绍ZooKeeper之前，先来介绍一下分布式协调技术，所谓分布式协调技术主要是用来解决分布式环境当中多个进程之间的同步控制，让他们有序的去访问某种共享资源，防止造成资源竞争（脑裂）的后果。")]),a._v(" "),e("p",[a._v("这里首先介绍下什么是分布式系统，所谓分布式系统就是在不同地域分布的多个服务器，共同组成的一个应用系统来为用户提供服务，在分布式系统中最重要的是进程的调度，这里假设有一个分布在三个地域的服务器组成的一个\n应用系统，在第一台机器上挂载了一个资源，然后这三个地域分布的应用进程都要竞争这个资源，但我们又不希望多个进程同时进行访问，这个时候就需要一个协调器，来让它们有序的来访问这个资源。")]),a._v(" "),e("p",[a._v("这个协调器就是分布式系统中经常提到的那个“锁”。")]),a._v(" "),e("p",[e("img",{attrs:{src:t(427),alt:"image-20201015092156290"}})])])}),[],!1,null,null,null);s.default=r.exports}}]);