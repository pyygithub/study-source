(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{158:function(s,e,a){s.exports=a.p+"assets/img/flume1.684ece9a.png"},222:function(s,e,a){s.exports=a.p+"assets/img/flume-logo.8ce83c82.png"},223:function(s,e,a){s.exports=a.p+"assets/img/flume2.14d0ec9a.png"},224:function(s,e,a){s.exports=a.p+"assets/img/flume_demo1.8bf48e6f.png"},231:function(s,e,a){"use strict";a.r(e);var t=a(28),n=Object(t.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"flume"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flume"}},[s._v("#")]),s._v(" Flume")]),s._v(" "),t("h2",{attrs:{id:"flume-介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flume-介绍"}},[s._v("#")]),s._v(" Flume 介绍")]),s._v(" "),t("p",[s._v("官网：http://flume.apache.org")]),s._v(" "),t("p",[t("img",{attrs:{src:a(222),alt:""}})]),s._v(" "),t("h3",{attrs:{id:"概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[s._v("#")]),s._v(" 概述")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("Flume是一个分布式、可靠、和高可用的海量日志采集、聚合和传输的系统。")])]),s._v(" "),t("li",[t("p",[s._v("Flume可以采集文件，socket数据包、文件、文件夹、kafka等各种形式源数据，又可以将采集到的数据(下沉sink)输出到HDFS、hbase、hive、kafka等众多外部存储系统中")])]),s._v(" "),t("li",[t("p",[s._v("一般的采集需求，通过对flflume的简单配置即可实现")])]),s._v(" "),t("li",[t("p",[s._v("Flume针对特殊场景也具备良好的自定义扩展能力，因此,flume可以适用于大部分的日常数据采集场景 。")])])]),s._v(" "),t("h3",{attrs:{id:"运行机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运行机制"}},[s._v("#")]),s._v(" 运行机制")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("Flume分布式系统中最核心的角色是agent，flume 采集系统就是由一个个 agent 所连接起来形成")])]),s._v(" "),t("li",[t("p",[s._v("每一个 agent 相当于一个数据传递员，内部有三个组件：")]),s._v(" "),t("ol",[t("li",[t("p",[t("strong",[s._v("Source")]),s._v("：采集组件，用于跟数据源对接，以获取数据")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("Channel")]),s._v("：传输通道组件，用于从source将数据传递到sink")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("Sink")]),s._v("：下沉组件，用于往下一级agent传递数据或者往最终存储系统传递数据")])])])])]),s._v(" "),t("h3",{attrs:{id:"flume采集系统结构图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flume采集系统结构图"}},[s._v("#")]),s._v(" Flume采集系统结构图")]),s._v(" "),t("ul",[t("li",[s._v("简单结构：单个 agent 采集数据")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(158),alt:""}})]),s._v(" "),t("ul",[t("li",[t("p",[s._v("复杂结构：多级 Agent 之间串联 采集数据")]),s._v(" "),t("p",[t("img",{attrs:{src:a(223),alt:""}})])])]),s._v(" "),t("h2",{attrs:{id:"flume-实战案例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flume-实战案例"}},[s._v("#")]),s._v(" "),t("strong",[s._v("Flume")]),s._v(" 实战案例")]),s._v(" "),t("blockquote",[t("p",[s._v("案例：使用网络telent命令向一台机器发送一些网络数据，然后通过 flume 采集网络端口数据")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(224),alt:""}})]),s._v(" "),t("h3",{attrs:{id:"flume-的安装部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flume-的安装部署"}},[s._v("#")]),s._v(" "),t("strong",[s._v("Flume")]),s._v(" 的安装部署")]),s._v(" "),t("h4",{attrs:{id:"step-1-下载解压修改配置文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step-1-下载解压修改配置文件"}},[s._v("#")]),s._v(" "),t("strong",[s._v("Step 1:")]),s._v(" 下载解压修改配置文件")]),s._v(" "),t("p",[s._v("下载地址： http://archive.apache.org/dist/flflume/1.8.0/apache-flflume-1.8.0-bin.tar.gz")]),s._v(" "),t("p",[s._v("Flume的安装非常简单，只需要解压即可，当然，前提是已有hadoop环境")]),s._v(" "),t("p",[s._v("上传安装包到数据源所在节点上")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#cd /export/softwares/ ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#tar -zxvf apache-flume-1.8.0-bin.tar.gz -C ../servers/ ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#cd /export/servers/apache-flume-1.8.0-bin/conf ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#cp flume-env.sh.template flume-env.sh ")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#vim flume-env.sh ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("JAVA_HOME")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/opt/slft/jdk1.8.0_141\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h4",{attrs:{id:"step-2-开发配置文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step-2-开发配置文件"}},[s._v("#")]),s._v(" "),t("strong",[s._v("Step 2:")]),s._v(" 开发配置文件")]),s._v(" "),t("p",[s._v("根据数据采集的需求配置采集方案，描述在配置文件中(文件名可任意自定义)")]),s._v(" "),t("p",[s._v("配置我们的网络收集的配置文件")]),s._v(" "),t("p",[s._v("在flume的conf目录下新建一个配置文件（采集方案）")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#vim /export/servers/apache-flume-1.8.0-bin/conf/netcat-logger.conf")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("div",{staticClass:"language-conf line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 定义这个agent中各组件的名字: a1\na1.sources = r1 \na1.sinks = k1 \na1.channels = c1 \n\n# 描述和配置source组件：r1 \na1.sources.r1.type = netcat \na1.sources.r1.bind = 191.x.x.x\na1.sources.r1.port = 44444 \n\n# 描述和配置sink组件：k1 \na1.sinks.k1.type = logger \n\n# 描述和配置channel组件，此处使用是内存缓存的方式 \na1.channels.c1.type = memory \na1.channels.c1.capacity = 1000 \na1.channels.c1.transactionCapacity = 100 \n\n# 描述和配置source channel sink之间的连接关系 \na1.sources.r1.channels = c1 \na1.sinks.k1.channel = c1\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br")])]),t("h4",{attrs:{id:"step-3-启动配置文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step-3-启动配置文件"}},[s._v("#")]),s._v(" "),t("strong",[s._v("Step 3:")]),s._v(" 启动配置文件")]),s._v(" "),t("p",[s._v("指定采集方案配置文件，在相应的节点上启动flflume agent")]),s._v(" "),t("p",[s._v("先用一个最简单的例子来测试一下程序环境是否正常")]),s._v(" "),t("p",[s._v("启动agent去采集数据")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#/bin/flume-ng agent -c conf -f conf/netcat-logger.conf -n a1 -Dflume.root.logger=INFO,console")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[t("p",[s._v("-c conf 指定flflume自身的配置文件所在目录")])]),s._v(" "),t("li",[t("p",[s._v("-f conf/netcat-logger.con 指定我们所描述的采集方案")])]),s._v(" "),t("li",[t("p",[s._v("-n a1 指定我们这个agent的名字")])])]),s._v(" "),t("h4",{attrs:{id:"step-4-安装-telnet-准备测试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step-4-安装-telnet-准备测试"}},[s._v("#")]),s._v(" "),t("strong",[s._v("Step 4:")]),s._v(" 安装 "),t("strong",[s._v("Telnet")]),s._v(" 准备测试")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("在node02机器上面安装telnet客户端，用于模拟数据的发送 \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#yum -y install telnet ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#telnet node03 44444 # 使用telnet模拟数据发送")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])])])}),[],!1,null,null,null);e.default=n.exports}}]);